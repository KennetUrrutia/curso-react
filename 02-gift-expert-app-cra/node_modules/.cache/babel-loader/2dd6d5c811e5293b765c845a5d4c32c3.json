{"ast":null,"code":"var _jsxFileName = \"/Users/kenneturrutia/Desktop/React/Curso/gift-expert-app-cra/src/components/GifGrid.jsx\",\n  _s = $RefreshSig$();\nimport useFetchGifs from \"../Hooks/useFetchGifs\";\nimport GifItem from \"./GifItem\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GifGrid = _ref => {\n  _s();\n  let {\n    category\n  } = _ref;\n  const {\n    images,\n    isLoading\n  } = useFetchGifs(category);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(GifItem, {\n        ...image\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GifGrid, \"dawKlH12TAydst/0CgtT/vGhcAM=\", false, function () {\n  return [useFetchGifs];\n});\n_c = GifGrid;\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired\n};\nexport default GifGrid;\nvar _c;\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"names":["useFetchGifs","GifItem","PropTypes","GifGrid","category","images","isLoading","map","image","id","propTypes","string","isRequired"],"sources":["/Users/kenneturrutia/Desktop/React/Curso/gift-expert-app-cra/src/components/GifGrid.jsx"],"sourcesContent":["import useFetchGifs from \"../Hooks/useFetchGifs\"\nimport GifItem from \"./GifItem\"\nimport PropTypes from 'prop-types'\n\nconst GifGrid = ({ category }) => {\n\n  const { images, isLoading } = useFetchGifs( category )\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {\n        isLoading && (<h2>Cargando...</h2>)\n      }\n      <div className=\"card-grid\">\n        {\n          images.map((image) => (\n            <GifItem\n              key={image.id}\n              {...image}\n              // title={image.title}\n              // url={image.url}\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired\n}\n\nexport default GifGrid"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,uBAAuB;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,YAAY;AAAA;AAAA;AAElC,MAAMC,OAAO,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAE3B,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGN,YAAY,CAAEI,QAAQ,CAAE;EAEtD,oBACE;IAAA,wBACE;MAAA,UAAKA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,EAEjBE,SAAS,iBAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eAErC;MAAK,SAAS,EAAC,WAAW;MAAA,UAEtBD,MAAM,CAACE,GAAG,CAAEC,KAAK,iBACf,QAAC,OAAO;QAAA,GAEFA;MAAK,GADJA,KAAK,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA;EAAA,gBACL;AAEP,CAAC;AAAA,GAxBKN,OAAO;EAAA,QAEmBH,YAAY;AAAA;AAAA,KAFtCG,OAAO;AA0BbA,OAAO,CAACO,SAAS,GAAG;EAClBN,QAAQ,EAAEF,SAAS,CAACS,MAAM,CAACC;AAC7B,CAAC;AAED,eAAeT,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}